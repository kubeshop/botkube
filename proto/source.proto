syntax = "proto3";

import "google/protobuf/empty.proto";

option go_package = "pkg/api/source";

package source;

message Config {
	// RawYAML contains the Source configuration in YAML definitions.
	bytes rawYAML = 1;
}

message StreamRequest {
	// Configs is a list of Source configurations specified by users.
	repeated Config configs = 1;
	// context holds context stream.
	StreamContext context = 3;
}

message StreamContext {
	SourceContext sourceContext = 1;
	// kubeConfig is is kubeConfig represented in bytes.
	bytes kubeConfig = 2;
}

message SourceContext {
	bool isInteractivitySupported = 1;
	string clusterName = 2;
	string sourceName = 3;
	IncomingWebhookContext incomingWebhook = 4;
}

message IncomingWebhookContext {
	string baseURL = 1;
	string fullURLForSource = 2;
}

message StreamResponse {
	bytes event = 1;
}

message ExternalRequest {
	// Payload is a payload of a external request.
	bytes payload = 1;
	// Config is Source configuration specified by users.
	Config config = 2;
	// context holds context for external request.
	ExternalRequestContext context = 3;
}

message ExternalRequestContext {
	SourceContext sourceContext = 1;
}

message ExternalRequestResponse {
	// event is a response of a external request.
	bytes event = 1;
}

message MetadataResponse {
	// version is a version of a given plugin. It should follow the SemVer syntax.
	string version = 1;
	// description is a description of a given plugin.
	string description = 2;
	// json_schema is a JSON schema of a given plugin configuration.
	JSONSchema json_schema = 3;
	// dependencies is a list of dependencies of a given plugin.
	map<string, Dependency> dependencies = 4;
	// external_request is a metadata of a given external request.
	optional ExternalRequestMetadata external_request = 5;
	// URL to plugin documentation.
	string documentation_url = 6;
	// Recommended plugin recommended
	bool recommended = 7;
}

message ExternalRequestMetadata {
	// payload is a payload of a external request.
	optional ExternalRequestPayloadMetadata payload = 1;
}

message ExternalRequestPayloadMetadata {
	// json_schema is a JSON schema of a given incoming webhook request body.
	JSONSchema json_schema = 1;
}

message JSONSchema {
	// value is the string value of the JSON schema.
	string value = 1;
	// ref_url is the remote reference of the JSON schema.
	string ref_url = 2;
}

message Dependency {
	// urls is the map of URL of the dependency. The key is in format of "os/arch", such as "linux/amd64".
	map<string, string> urls = 1;
}

service Source {
	rpc Stream(StreamRequest) returns (stream StreamResponse) {}
	rpc HandleExternalRequest(ExternalRequest) returns (ExternalRequestResponse) {}
	rpc Metadata(google.protobuf.Empty) returns (MetadataResponse) {}
}
