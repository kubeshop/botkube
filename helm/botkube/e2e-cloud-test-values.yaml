analytics:
  disable: true

rbac:
  create: true
  rules:
    - apiGroups: [ "*" ]
      resources: [ "*" ]
      verbs: [ "get", "watch", "list" ] # defaults
  staticGroupName: "botkube-plugins-default"

extraObjects:

  # Group 'kubectl-first-channel': permissions for kubectl for first channel
  ## namespace scoped permissions
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata: &kubectl-wait
      name: kubectl-first-channel-namespaced-perms
      labels:
        app.kubernetes.io/instance: botkube-e2e-test
    rules:
      - apiGroups: [ "apps" ]
        resources: [ "deployments" ]
        verbs: [ "get","watch","list" ]
      - apiGroups: [ "" ]
        resources: [ "configmaps", "pods" ]
        verbs: [ "get", "watch", "list" ]
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      <<: *kubectl-wait
      namespace: botkube
    roleRef: &kubectl-wait-role
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kubectl-first-channel-namespaced-perms
    subjects: &kubectl-first-channel-subject
      - kind: User
        name: kubectl-first-channel
        apiGroup: rbac.authorization.k8s.io
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      <<: *kubectl-wait
      namespace: default
    roleRef: *kubectl-wait-role
    subjects: *kubectl-first-channel-subject

  ### cluster permissions
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata: &kubectl-deploy-all-meta
      name: kc-first-channel-cluster-perms
      labels:
        app.kubernetes.io/instance: botkube-e2e-test
    rules:
      - apiGroups: [ "apps" ]
        resources: [ "deployments" ]
        verbs: [ "get", "list" ]
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata: *kubectl-deploy-all-meta
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kc-first-channel-cluster-perms
    subjects: *kubectl-first-channel-subject

  # Group 'kc-exec-only'
  ## exec only for default and botkube namespaces:
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata: &kc-exec-only-meta
      name: kc-exec-only
      labels:
        app.kubernetes.io/instance: botkube-e2e-test
    rules:
      - apiGroups: [ "" ]
        resources: [ "pods/exec" ]
        verbs: [ "create" ]
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      <<: *kc-exec-only-meta
      namespace: botkube
    roleRef: &kc-exec-only-role
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kc-exec-only
    subjects: &kc-exec-only-subject
      - kind: User
        name: kc-exec-only
        apiGroup: rbac.authorization.k8s.io
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      <<: *kc-exec-only-meta
      namespace: default
    roleRef: *kc-exec-only-role
    subjects: *kc-exec-only-subject

  # Group 'kc-label-svc-all':
  ## namespace scoped permissions
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata: &kc-label-svc-all-meta
      name: kc-label-svc-all
      labels:
        app.kubernetes.io/instance: botkube-e2e-test
    rules:
      - apiGroups: [ "" ]
        resources: [ "services" ]
        verbs: [ "get", "patch" ]
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata: *kc-label-svc-all-meta
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kc-label-svc-all
    subjects:
      - kind: User
        name: kc-label-svc-all
        apiGroup: rbac.authorization.k8s.io

  # Group 'rbac-with-static-mapping':
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata: &k8s-cm-watch-meta
      name: kc-watch-cm
      labels:
        app.kubernetes.io/instance: botkube-e2e-test
    rules:
      - apiGroups: [ "" ]
        resources: [ "configmaps" ]
        verbs: [ "watch", "list" ]
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata: *k8s-cm-watch-meta
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kc-watch-cm
    subjects:
      - kind: Group
        name: kc-watch-cm
        apiGroup: rbac.authorization.k8s.io
