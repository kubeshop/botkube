{{- $runtimeStateCfgMap := .Values.settings.persistentConfig.runtime.configMap.name -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $runtimeStateCfgMap }}
  annotations:
{{- if .Values.settings.persistentConfig.runtime.configMap.annotations }}
{{ toYaml .Values.settings.persistentConfig.runtime.configMap.annotations | indent 4 }}
{{- end }}
  labels:
    app.kubernetes.io/name: {{ include "botkube.name" . }}
    helm.sh/chart: {{ include "botkube.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    botkube.io/config-watch: "true"
data:
  {{- $prevRuntimeCfgMap := lookup "v1" "ConfigMap" .Release.Namespace $runtimeStateCfgMap | default dict }}
  {{- $prevRuntimeFile := index ( $prevRuntimeCfgMap.data | default dict ) .Values.settings.persistentConfig.runtime.fileName | default "" | fromYaml -}}
  {{- $mergedRuntimeCommunications := mustMergeOverwrite (mustDeepCopy (default (dict) $prevRuntimeFile.communications )) (mustDeepCopy .Values.communications) }}
  {{- $mergedRuntimeAction := mustMergeOverwrite (mustDeepCopy (default (dict) $prevRuntimeFile.actions )) (mustDeepCopy .Values.actions) }}
  # This file has a special prefix to load it as the last config file during Botkube startup.
  {{ .Values.settings.persistentConfig.runtime.fileName }}: |
    actions:
    {{- range $actionName,$action := $mergedRuntimeAction }}
      {{$actionName}}:
        enabled: {{ $action.enabled }}
    {{- end }}
    communications:
    {{- range $commGroupName,$commGroup := $mergedRuntimeCommunications }}
      {{$commGroupName}}:
      {{- range $commPlatformName,$commPlatform := $commGroup }}
        {{- /* Bots */ -}}
        {{- if $commPlatform.channels }}
        {{ $commPlatformName }}:
          channels:
          {{- end }}
        {{- $channels := $commPlatform.channels | default nil -}}
        {{- if $channels }}
            {{- range $channelAlias,$channelCfg := $channels }}
            {{ $channelAlias }}:
              bindings:
                {{- $channBindings := $channelCfg.bindings | default nil }}
                sources:
                  {{- with $channBindings.sources -}}
                    {{ toYaml . | nindent 16 }}
                  {{- end -}}
            {{- end }}
        {{- end -}}
        {{- /* MS Teams - we could check if the $commPlatform has bindings, but then webhook would also apply  */ -}}
        {{- if (eq $commPlatformName "teams") }}
        {{ $commPlatformName }}:
          bindings:
            {{- $bindings := $commPlatform.bindings | default nil }}
            sources:
            {{- with $bindings.sources -}}
              {{ toYaml . | nindent 14 }}
            {{- end -}}
        {{- end }}
      {{- end }}
    {{- end }}
---
{{ $startupStateCfgMap := .Values.settings.persistentConfig.startup.configMap.name -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $startupStateCfgMap }}
  annotations:
{{- if .Values.settings.persistentConfig.startup.configMap.annotations }}
{{ toYaml .Values.settings.persistentConfig.startup.configMap.annotations | indent 4 }}
{{- end }}
  labels:
    app.kubernetes.io/name: {{ include "botkube.name" . }}
    helm.sh/chart: {{ include "botkube.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    botkube.io/config-watch: "false" # Explicitly don't watch this ConfigMap
data:
  {{- $prevStartupCfgMap := lookup "v1" "ConfigMap" .Release.Namespace $startupStateCfgMap | default dict }}
  {{- $prevStartupFile := index ( $prevStartupCfgMap.data | default dict ) .Values.settings.persistentConfig.startup.fileName | default "" | fromYaml -}}
  {{- $mergedStartupCommunications := mustMergeOverwrite (mustDeepCopy (default (dict) $prevStartupFile.communications )) (mustDeepCopy .Values.communications) }}
  {{- $mergedStartupFilters := mustMergeOverwrite (mustDeepCopy (default (dict) $prevStartupFile.filters )) (mustDeepCopy (default (dict) .Values.filters)) }}
  # This file has a special prefix to load it as the last config file during Botkube startup.
  {{ .Values.settings.persistentConfig.startup.fileName }}: |
    communications:
    {{- range $commGroupName,$commGroup := $mergedStartupCommunications }}
      {{$commGroupName}}:
      {{- range $commPlatformName,$commPlatform := $commGroup -}}
        {{- if $commPlatform.channels }}
        {{$commPlatformName}}:
          channels:
            {{- range $channelAlias,$channelCfg := $commPlatform.channels }}
            {{$channelAlias}}:
              notification:
                {{- $channNotifCfg := $channelCfg.notification | default nil }}
                disabled: {{ $channNotifCfg.disabled | default false }}
            {{- end }}
        {{- end -}}
        {{/* MS Teams doesn't support notification configuration via Botkube commands. */}}
      {{- end }}
    {{- end }}
    filters:
      {{- $mergedStartupFilters | toYaml | nindent 6 }}

