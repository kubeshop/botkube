apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "botkube.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "botkube.name" . }}
    helm.sh/chart: {{ include "botkube.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    component: controller
    app: botkube
  annotations:
    {{- if .Values.deployment.annotations }}
{{ toYaml .Values.deployment.annotations | indent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      component: controller
      app: botkube
  template:
    metadata:
      labels:
        component: controller
        app: botkube
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/global-config.yaml") . | sha256sum }}
      {{- if .Values.extraAnnotations }}
{{ toYaml .Values.extraAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
      serviceAccountName: {{ include "botkube.serviceAccountName" . }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.containerSecurityContext }}
          securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          {{ end }}
          volumeMounts:
            - name: config-volume
              mountPath: "/config"
          {{- with .Values.extraVolumeMounts }}
            {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.ssl.enabled }}
            - name: certs
              mountPath: "/etc/ssl/certs"
          {{ end }}
          {{- if .Values.kubeconfig.enabled }}
            - name: kubeconfig
              mountPath: "/.kube/config"
              subPath: config
          {{ end }}
            - name: cache
              mountPath: "/.kube/cache"
          env:
            - name: BOTKUBE_CONFIG_PATHS
              value: "/config/analytics.yaml,/config/global_config.yaml,/config/comm_config.yaml"
            - name: BOTKUBE_SETTINGS_METRICS__PORT
              value: {{ .Values.service.targetPort | quote }}
            {{- if .Values.kubeconfig.enabled }}
            - name: BOTKUBE_SETTINGS_KUBECONFIG
              value: "/.kube/config"
            {{- end }}
          {{- with .Values.extraEnv }}
            {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}
      volumes:
        - name: config-volume
          projected:
            sources:
            - configMap:
                name: {{ include "botkube.fullname" . }}-global-config
            - configMap:
                name: {{ include "botkube.fullname" . }}-analytics-config
            - secret:
                name: {{ include "botkube.CommunicationsSecretName" . }}
      {{- with .Values.extraVolumes }}
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.ssl.enabled }}
        - name: certs
          secret:
            secretName: {{ include "botkube.SSLCertSecretName" . }}
      {{ end }}
      {{- if .Values.kubeconfig.enabled }}
        - name: kubeconfig
          secret:
            {{- if .Values.kubeconfig.base64Config }}
            secretName: {{ include "botkube.fullname" . }}-kubeconfig
            {{- else }}
            secretName: {{ .Values.kubeconfig.existingSecret }}
            {{- end }}
      {{ end }}
        - name: cache
          emptyDir: {}
      {{- if .Values.securityContext }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
      {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}

