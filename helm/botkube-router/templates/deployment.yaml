apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "botkube-router.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "botkube-router.name" . }}
    helm.sh/chart: {{ include "botkube-router.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: botkube-router
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: botkube-router
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "botkube-router.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: config-volume
              mountPath: "/config"
          env:
            - name: CONFIG_PATH
              value: "/config/"
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
         {{- end }}
      volumes:
         - name: config-volume
           projected:
            sources:
            - configMap:
                name: {{ include "botkube-router.fullname" . }}-configmap
            - secret:
                name: {{ include "botkube-router.CommunicationsSecretName" . }}