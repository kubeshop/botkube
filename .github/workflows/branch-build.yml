name: Branch build

on:
  push:
    branches:
      - main

env:
  HELM_VERSION: v3.9.0
  K3D_VERSION: v5.4.3
  INTEGRATION_TESTS_TIMEOUT: 30m
  IMAGE_REGISTRY: "ghcr.io"
  IMAGE_REPOSITORY: "kubeshop/botkube"
  TEST_IMAGE_REPOSITORY: "kubeshop/botkube-test"
  IMAGE_TAG: v9.99.9-dev # TODO: Use commit hash tag to make the predictable builds for each commit on branch

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GOPATH: /home/runner/work/botkube
      GOBIN: /home/runner/work/botkube/bin
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version-file: 'go.mod'
        cache: true
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Docker Login
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Install GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        install-only: true
        version: latest
    - name: Run GoReleaser
      run: make release-snapshot
      env:
        ANALYTICS_API_KEY: ${{ secrets.ANALYTICS_API_KEY }}
        SLACK_APP_TOKEN: ${{ secrets.SLACK_APP_TOKEN }}
    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: ${{ env.HELM_VERSION }}

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: [ build ]

    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Download k3d
        run: "wget -q -O - https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | TAG=${K3D_VERSION} bash"

      - name: Create cluster
        run: "k3d cluster create botkube --wait --timeout=5m"

      - name: Install BotKube
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SOCKET_SLACK_BOT_TOKEN }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          DISCORD_BOT_ID: ${{ secrets.DISCORD_BOT_ID }}
          SLACK_TESTER_APP_TOKEN: ${{ secrets.SLACK_TESTER_APP_TOKEN }}
          DISCORD_TESTER_APP_TOKEN: ${{ secrets.DISCORD_TESTER_APP_TOKEN }}
          DISCORD_GUILD_ID: ${{ secrets.DISCORD_GUILD_ID }}
        run: |
          helm install botkube --namespace botkube ./helm/botkube --wait --create-namespace \
            -f ./helm/botkube/e2e-test-values.yaml \
            --set communications.default-group.slack.token="${SLACK_BOT_TOKEN}" \
            --set communications.default-group.discord.token="${DISCORD_BOT_TOKEN}" \
            --set communications.default-group.discord.botID="${DISCORD_BOT_ID}" \
            --set image.registry="${IMAGE_REGISTRY}" \
            --set image.repository="${IMAGE_REPOSITORY}" \
            --set image.tag="${IMAGE_TAG}" \
            --set e2eTest.image.registry="${IMAGE_REGISTRY}" \
            --set e2eTest.image.repository="${TEST_IMAGE_REPOSITORY}" \
            --set e2eTest.image.tag="${IMAGE_TAG}" \
            --set e2eTest.slack.testerAppToken="${SLACK_TESTER_APP_TOKEN}" \
            --set e2eTest.slack.botName="botkubev2" \
            --set e2eTest.slack.additionalContextMessage="Branch test - commit SHA: ${GITHUB_SHA} - https://github.com/kubeshop/botkube/commit/${GITHUB_SHA}" \
            --set e2eTest.discord.testerAppToken="${DISCORD_TESTER_APP_TOKEN}" \
            --set e2eTest.discord.guildID="${DISCORD_GUILD_ID}" \
            --set e2eTest.discord.additionalContextMessage="Branch test - commit SHA: ${GITHUB_SHA} - https://github.com/kubeshop/botkube/commit/${GITHUB_SHA}"

      - name: Run tests
        run: "helm test botkube --namespace botkube --timeout=$INTEGRATION_TESTS_TIMEOUT --logs"
