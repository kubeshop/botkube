name: Publish BotKube image

on:
  pull_request_target:
    types: [ opened, synchronize, reopened ]
    branches:
      - "develop"
    paths-ignore:
      - 'branding/**'
      - 'design/**'
      - 'helm/**'
      - '.codespell-whitelist'
      - '.gitignore'
      - '.golangci.yml'
      - '.mergify.yml'
      - 'botkube-title.jpg'
      - 'botkube_arch.jpg'
      - 'CHANGELOG.md'
      - 'CODE_OF_CONDUCT.md'
      - 'comm_config.yaml'
      - 'CONTRIBUTING.md'
      - 'deploy-all-in-one.yaml'
      - 'deploy-all-in-one-tls.yaml'
      - 'LICENSE'
      - 'README.md'
      - 'resource_config.yaml'

env:
  GO_VERSION: 1.18
  PR_NUMBER: ${{ github.event.pull_request.number }}

jobs:

  save-image:
    name: Build and save BotKube image
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          install-only: true
          version: latest

      - name: Save
        run: |
          make save-pr-image

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: botkube-${{github.sha}}
          path: /tmp/*.tar
          retention-days: 1

  push-image:
    name: Push BotKube image
    runs-on: ubuntu-latest
    needs: [save-image]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: botkube-${{github.sha}}
          path: /tmp

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push
        run: make push-pr-image

      - name: Delete Docker image artifact
        uses: geekyeggo/delete-artifact@v1
        if: always()
        with:
          name: botkube-${{github.sha}}

      - name: Summary
        run: |
          cat > $GITHUB_STEP_SUMMARY << ENDOFFILE

          ### BotKube image published successfully! :rocket:
          To test BotKube with PR changes, run:

              gh pr checkout ${PR_NUMBER}
              helm install botkube -n botkube --create-namespace \\
              --set image.repository=infracloudio/pr/botkube \\
              --set image.tag=v${PR_NUMBER} \\
              ./helm/botkube

          ENDOFFILE
