project_name: botkube
env:
  - IMAGE_REGISTRY={{ if index .Env "IMAGE_REGISTRY"  }}{{ .Env.IMAGE_REGISTRY }}{{ else }}ghcr.io{{ end }}
  - IMAGE_REPOSITORY={{ if index .Env "IMAGE_REPOSITORY"  }}{{ .Env.IMAGE_REPOSITORY }}{{ else }}kubeshop/botkube{{ end }}
  - IMAGE_TAG={{ if index .Env "IMAGE_TAG"  }}{{ .Env.IMAGE_TAG }}{{ else }}{{ .Tag }}{{ end }}
  - MIGRATOR_IMAGE_REPOSITORY={{ if index .Env "MIGRATOR_IMAGE_REPOSITORY" }}{{ .Env.MIGRATOR_IMAGE_REPOSITORY }}{{ else }}kubeshop/botkube-migration{{ end }}
  - ANALYTICS_API_KEY={{ if index .Env "ANALYTICS_API_KEY"  }}{{ .Env.ANALYTICS_API_KEY }}{{ else }}{{ end }}
  - HOMEBREW_REPO_OWNER={{ if index .Env "REPO_OWNER"  }}{{ .Env.REPO_OWNER }}{{ else }}kubeshop{{ end }}
  - HOMEBREW_REPO_NAME={{ if index .Env "HOMEBREW_REPO_NAME"  }}{{ .Env.HOMEBREW_REPO_NAME }}{{ else }}botkube-tap{{ end }}
before:
  hooks:
    - go mod download
builds:
#  - id: botkube-agent
#    binary: botkube-agent
#    main: cmd/botkube-agent/main.go
#    ldflags: &ldflags
#      - -s -w
#        -X github.com/kubeshop/botkube/pkg/version.Version={{ .Env.IMAGE_TAG }}
#        -X github.com/kubeshop/botkube/pkg/version.GitCommitID={{ .Commit }}
#        -X github.com/kubeshop/botkube/pkg/version.BuildDate={{ .Date }}
#        -X github.com/kubeshop/botkube/internal/analytics.APIKey={{ .Env.ANALYTICS_API_KEY }}
#    env:
#      - CGO_ENABLED=0
#    goos:
#      - linux
#    goarch:
#      - amd64
#      - arm
#      - arm64
#    goarm:
#      - "7"
  - id: botkube-cli
    binary: botkube
    main: cmd/cli/main.go
    ldflags:
      - -s -w
        -X github.com/kubeshop/botkube/internal/cli/migrate.Tag={{ .Env.IMAGE_TAG }}
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64
      - arm
      - arm64
    goarm:
      - "7"
#  - id: botkube-cloud-migration
#    binary: botkube-cloud-migration
#    main: cmd/config-exporter/main.go
#    env:
#      - CGO_ENABLED=0
#    goos:
#      - linux
#    goarch:
#      - amd64
#      - arm
#      - arm64
#    goarm:
#      - "7"

snapshot:
  name_template: "{{ .Env.IMAGE_TAG }}"

release:
  # If set to true, will not auto-publish the release.
  draft: true
  prerelease: auto

  # Add extra pre-existing files to the release.
  # Prerequisites:
  # - build plugin binaries
  # - build plugin index.yaml
  extra_files:
#    - glob: ./plugin-dist/executor_*
#    - glob: ./plugin-dist/source_*
    - glob: ./plugins-index.yaml
    - glob: ./plugins-dev-index.yaml

changelog:
  skip: false

dockers:
#  - image_templates:
#      - "{{.Env.IMAGE_REGISTRY}}/{{.Env.IMAGE_REPOSITORY}}:{{ .Env.IMAGE_TAG }}-amd64"
#    use: buildx
#    dockerfile: "build/Dockerfile"
#    build_flag_templates:
#      - "--platform=linux/amd64"
#      - "--build-arg=botkube_version={{ .Env.IMAGE_TAG }}"
#  - image_templates:
#      - "{{.Env.IMAGE_REGISTRY}}/{{.Env.IMAGE_REPOSITORY}}:{{ .Env.IMAGE_TAG }}-arm64"
#    use: buildx
#    goarch: arm64
#    dockerfile: "build/Dockerfile"
#    build_flag_templates:
#      - "--platform=linux/arm64"
#      - "--build-arg=botkube_version={{ .Env.IMAGE_TAG }}"
#  - image_templates:
#      - "{{.Env.IMAGE_REGISTRY}}/{{.Env.IMAGE_REPOSITORY}}:{{ .Env.IMAGE_TAG }}-armv7"
#    use: buildx
#    goarch: arm
#    goarm: 7
#    dockerfile: "build/Dockerfile"
#    build_flag_templates:
#      - "--platform=linux/arm"
#      - "--build-arg=botkube_version={{ .Env.IMAGE_TAG }}"
#  - image_templates:
#      - "{{.Env.IMAGE_REGISTRY}}/{{.Env.MIGRATOR_IMAGE_REPOSITORY}}:{{ .Env.IMAGE_TAG }}"
#    use: buildx
#    dockerfile: "build/Dockerfile.migration"
#    build_flag_templates:
#      - "--platform=linux/amd64"
#      - "--build-arg=botkube_cloud_migration_version={{ .Env.IMAGE_TAG }}"
#docker_manifests:
#  - name_template: "{{.Env.IMAGE_REGISTRY}}/{{.Env.IMAGE_REPOSITORY}}:{{ .Env.IMAGE_TAG }}"
#    image_templates:
#      - "{{.Env.IMAGE_REGISTRY}}/{{.Env.IMAGE_REPOSITORY}}:{{ .Env.IMAGE_TAG }}-amd64"
#      - "{{.Env.IMAGE_REGISTRY}}/{{.Env.IMAGE_REPOSITORY}}:{{ .Env.IMAGE_TAG }}-arm64"
#      - "{{.Env.IMAGE_REGISTRY}}/{{.Env.IMAGE_REPOSITORY}}:{{ .Env.IMAGE_TAG }}-armv7"
#  - name_template: "{{.Env.IMAGE_REGISTRY}}/{{.Env.MIGRATOR_IMAGE_REPOSITORY}}:{{ .Env.IMAGE_TAG }}"
#    image_templates:
#      - "{{.Env.IMAGE_REGISTRY}}/{{.Env.MIGRATOR_IMAGE_REPOSITORY}}:{{ .Env.IMAGE_TAG }}"

archives:
  - id: bctl
    builds:
      - botkube-cli
brews:
  - name: bctl
    ids:
      - bctl
    tap:
      owner: "{{.Env.HOMEBREW_REPO_OWNER}}"
      name: "{{.Env.HOMEBREW_REPO_NAME}}"
      token: "{{ .Env.GITHUB_TOKEN }}"
    download_strategy: CurlDownloadStrategy
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    folder: Formula
    homepage: "https://botkube.io"
    description: "BotKube CLI is a command line tool that helps you migrate your Botkube installation to Botkube Cloud."
    license: "MIT"
