# The code has been automatically generated and should not be modified directly. To update, run 'make gen-plugins-goreleaser' from the root directory of this repository.

# GoReleaser already creates Botkube artifacts in the ./dist folder.
# To not override them during release, we use a different folder
dist: plugin-dist

before:
  hooks:
    - go mod download

builds:
  - id: doctor
    main: cmd/executor/doctor/main.go
    binary: executor_doctor_{{ .Os }}_{{ .Arch }}

    no_unique_dist_dir: true
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    goarm:
      - 7
  - id: echo
    main: cmd/executor/echo/main.go
    binary: executor_echo_{{ .Os }}_{{ .Arch }}

    no_unique_dist_dir: true
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    goarm:
      - 7
  - id: exec
    main: cmd/executor/exec/main.go
    binary: executor_exec_{{ .Os }}_{{ .Arch }}

    no_unique_dist_dir: true
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    goarm:
      - 7
  - id: flux
    main: cmd/executor/flux/main.go
    binary: executor_flux_{{ .Os }}_{{ .Arch }}

    no_unique_dist_dir: true
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    goarm:
      - 7
  - id: gh
    main: cmd/executor/gh/main.go
    binary: executor_gh_{{ .Os }}_{{ .Arch }}

    no_unique_dist_dir: true
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    goarm:
      - 7
  - id: helm
    main: cmd/executor/helm/main.go
    binary: executor_helm_{{ .Os }}_{{ .Arch }}

    no_unique_dist_dir: true
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    goarm:
      - 7
  - id: kubectl
    main: cmd/executor/kubectl/main.go
    binary: executor_kubectl_{{ .Os }}_{{ .Arch }}

    no_unique_dist_dir: true
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    goarm:
      - 7
  - id: cm-watcher
    main: cmd/source/cm-watcher/main.go
    binary: source_cm-watcher_{{ .Os }}_{{ .Arch }}

    no_unique_dist_dir: true
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    goarm:
      - 7
  - id: github-events
    main: cmd/source/github-events/main.go
    binary: source_github-events_{{ .Os }}_{{ .Arch }}

    no_unique_dist_dir: true
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    goarm:
      - 7
  - id: keptn
    main: cmd/source/keptn/main.go
    binary: source_keptn_{{ .Os }}_{{ .Arch }}

    no_unique_dist_dir: true
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    goarm:
      - 7
  - id: kubernetes
    main: cmd/source/kubernetes/main.go
    binary: source_kubernetes_{{ .Os }}_{{ .Arch }}

    no_unique_dist_dir: true
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    goarm:
      - 7
  - id: prometheus
    main: cmd/source/prometheus/main.go
    binary: source_prometheus_{{ .Os }}_{{ .Arch }}

    no_unique_dist_dir: true
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    goarm:
      - 7

archives:
      
  - builds: [doctor]
    id: doctor
    files:
      - none*
    name_template: "{{ .Binary }}"
      
  - builds: [echo]
    id: echo
    files:
      - none*
    name_template: "{{ .Binary }}"
      
  - builds: [exec]
    id: exec
    files:
      - none*
    name_template: "{{ .Binary }}"
      
  - builds: [flux]
    id: flux
    files:
      - none*
    name_template: "{{ .Binary }}"
      
  - builds: [gh]
    id: gh
    files:
      - none*
    name_template: "{{ .Binary }}"
      
  - builds: [helm]
    id: helm
    files:
      - none*
    name_template: "{{ .Binary }}"
      
  - builds: [kubectl]
    id: kubectl
    files:
      - none*
    name_template: "{{ .Binary }}"
      
  - builds: [cm-watcher]
    id: cm-watcher
    files:
      - none*
    name_template: "{{ .Binary }}"
      
  - builds: [github-events]
    id: github-events
    files:
      - none*
    name_template: "{{ .Binary }}"
      
  - builds: [keptn]
    id: keptn
    files:
      - none*
    name_template: "{{ .Binary }}"
      
  - builds: [kubernetes]
    id: kubernetes
    files:
      - none*
    name_template: "{{ .Binary }}"
      
  - builds: [prometheus]
    id: prometheus
    files:
      - none*
    name_template: "{{ .Binary }}"
  

snapshot:
  name_template: 'v{{ .Version }}'
