# Channels configuration
communications:
  # Settings for Slack
  slack:
    enabled: false
    channel: 'SLACK_CHANNEL'
    token: 'SLACK_API_TOKEN'
    notification:
      type: short                          # Change notification type short/long you want to receive. Type is optional and default is short.

  # Settings for Mattermost
  mattermost:
    enabled: false
    url: 'MATTERMOST_SERVER_URL'              # URL where Mattermost is running. e.g https://example.com:9243
    token: 'MATTERMOST_TOKEN'                 # Personal Access token generated by BotKube user
    team: 'MATTERMOST_TEAM'                   # Mattermost Team to configure with BotKube
    channel: 'MATTERMOST_CHANNEL'             # Mattermost Channel for receiving BotKube alerts
    notification:
      type: short                          # Change notification type short/long you want to receive. Type is optional and default is short.

  # Settings for MS Teams
  teams:
    enabled: false
    appID: 'APPLICATION_ID'
    appPassword: 'APPLICATION_PASSWORD'
    notification:
      type: short
    port: 3978

  # Settings for Discord
  discord:
    enabled: false
    token: 'DISCORD_TOKEN'                    # BotKube Bot Token
    botID: 'DISCORD_BOT_ID'                   # BotKube Application Client ID
    channel: 'DISCORD_CHANNEL_ID'             # Discord Channel id for receiving BotKube alerts
    notification:
      type: short                          # Change notification type short/long you want to receive. Type is optional and default is short.


  # Settings for ELS
  elasticsearch:
    enabled: false
    awsSigning:
      enabled: false                          # enable awsSigning using IAM for Elastisearch hosted on AWS, if true make sure AWS environment variables are set. Refer https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html
      awsRegion: 'us-east-1'                  # AWS region where Elasticsearch is deployed
      roleArn: ''                             # AWS IAM Role arn to assume for credentials, use this only if you dont want to use the EC2 instance role or not running on AWS instance
    server: 'ELASTICSEARCH_ADDRESS'           # e.g https://example.com:9243
    username: 'ELASTICSEARCH_USERNAME'        # Basic Auth
    password: 'ELASTICSEARCH_PASSWORD'
    skipTLSVerify: false                      # toggle verification of TLS certificate of the Elastic nodes. Verification is skipped when option is true. Enable to connect to clusters with self-signed certs
    # ELS index settings
    index:
      name: botkube
      type: botkube-event
      shards: 1
      replicas: 0

  # Settings for Webhook
  webhook:
    enabled: false
    url: 'WEBHOOK_URL'                        # e.g https://example.com:80

resources:
  - name: v1/pods             # Name of the resource. Resource name must be in group/version/resource (G/V/R) format
    # resource name should be plural (e.g apps/v1/deployments, v1/pods)
    namespaces:               # List of namespaces, "all" will watch all the namespaces
      include:
        - all
      ignore:                 # List of namespaces to be ignored (omitempty), used only with include: all, can contain a wildcard (*)
        -                     # example : include [all], ignore [x,y,secret-ns-*]
    events:                   # List of lifecycle events you want to receive, e.g create, update, delete, error OR all
      - create
      - delete
      - error
  - name: v1/services
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - delete
      - error
  - name: apps/v1/deployments
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - update
      - delete
      - error
    updateSetting:
      includeDiff: true
      fields:
        - spec.template.spec.containers[*].image
        - status.availableReplicas
  - name: apps/v1/statefulsets
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - update
      - delete
      - error
    updateSetting:
      includeDiff: true
      fields:
        - spec.template.spec.containers[*].image
        - status.readyReplicas
  - name: networking.k8s.io/v1/ingresses
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - delete
      - error
  - name: v1/nodes
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - delete
      - error
  - name: v1/namespaces
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - delete
      - error
  - name: v1/persistentvolumes
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - delete
      - error
  - name: v1/persistentvolumeclaims
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - delete
      - error
  - name: v1/secrets
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - delete
      - error
  - name: v1/configmaps
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - delete
      - error
  - name: apps/v1/daemonsets
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - update
      - delete
      - error
    updateSetting:
      includeDiff: true
      fields:
        - spec.template.spec.containers[*].image
        - status.numberReady
  - name: batch/v1/jobs
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - update
      - delete
      - error
    updateSetting:
      includeDiff: true
      fields:
        - spec.template.spec.containers[*].image
        - status.conditions[*].type
  - name: rbac.authorization.k8s.io/v1/roles
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - delete
      - error
  - name: rbac.authorization.k8s.io/v1/rolebindings
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - delete
      - error
  - name: rbac.authorization.k8s.io/v1/clusterrolebindings
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - delete
      - error
  - name: rbac.authorization.k8s.io/v1/clusterroles
    namespaces:
      include:
        - all
      ignore:
        -
    events:
      - create
      - delete
      - error

# Check true if you want to receive recommendations
# about the best practices for the created resource
recommendations: true
